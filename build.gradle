plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'com.diffplug.gradle.spotless' version '4.5.1'
}

// Copy the resources referred by the Doma annotation processors to
// the destinationDir of the compileJava task
task copyDomaResources(type: Sync) {
    from sourceSets.main.resources.srcDirs
    into compileJava.destinationDir
    include "doma.compile.config"
    include "META-INF/**/*.sql"
    include "META-INF/**/*.script"
}

group = 'com.app'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

compileJava {
    dependsOn copyDomaResources
    options.encoding = "UTF-8"
}

spotless {
    java {
        googleJavaFormat('1.8')
    }
}

repositories {
    mavenCentral()
}
// Doma Setting
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    // springframework
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.boot:spring-boot-starter-jdbc"
    compile group: 'org.springframework.security', name: 'spring-security-core', version: '5.3.3.RELEASE'

    // DataBase
    runtimeOnly 'org.postgresql:postgresql'

    // Migration
    implementation 'org.flywaydb:flyway-core'

    // doma exclude springframework
    implementation "org.seasar.doma:doma-core:+"
    annotationProcessor "org.seasar.doma:doma-processor:+"
    compile("org.seasar.doma.boot:doma-spring-boot-starter:+") {
        exclude group: "org.springframework.boot"
    }

    // Library
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    // EhCache
    compile "net.sf.ehcache:ehcache"
}

test {
    useJUnitPlatform()
}
